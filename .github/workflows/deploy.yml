name: Verify Code & Build
run-name: Verify code and build image
on:
  push:
    branches:
      - '*'

env:
  GOPROXY: https://proxy.golang.org

permissions:
    contents: read
    packages: read
    statuses: write
    pull-requests: write

jobs:             
    verify_backend_quality:
      name: Verify Backend Code Quality
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - uses: actions/setup-go@v5
          with:
            go-version: '1.22'

        - name: golangci-lint
          uses: golangci/golangci-lint-action@v4
          with:
            version: v1.56.2
            working-directory: ./
            only-new-issues: false
            args: --concurrency=16 --timeout=5m --out-format=github-actions --issues-exit-code=1
            skip-cache: false
            skip-pkg-cache: true

    build_and_push:
      needs:
        - verify_backend_quality
      name: Build and Push Docker Image to AWS ECR Public
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
  
        - name: Login to Amazon ECR Public
          id: login-ecr-public
          uses: aws-actions/amazon-ecr-login@v2
          with:
            registry-type: public
            mask-password: 'false'
    
        - name: Build, tag, and push docker image to Amazon ECR Public
          env:
            REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
            REGISTRY_ALIAS: a7x2s9j3
            REPOSITORY: go-skeleton-app
            IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest .
            docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
            docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest